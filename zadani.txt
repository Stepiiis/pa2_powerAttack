Naprogramujte jendoduchou grafickou tower ATTACK hru (nejedná se o tower defense)

Váš engine:

ze souboru nahraje definici ÚTOČNÍKŮ (jméno, životy, rychlost, útok, odolnost na určitý typ věže ...)
ze souboru nahraje možné mapy a typy obranných věží (životy, rychlost, dosah, útok, odolnost na určitý typ útočníka,...)
implementuje jednoduchou interakci věž vs. útočníci (útok, proběhnutí, ...), počitadlo skóre, detekci vítězství (po nezabití _x útočníků)
implementuje jednoduchou AI řídící rozmisťování věží
umožňuje ukládat a načítat rozehrané hry
Engine může fungovat jako real-time hra, či tahová hra.

Jak může vypadat mapa?

" " prázdné místa pro pohyb útočníku a stavbu věží
I označuje věže
# označuje zeď
@, % jsou různé druhy útočníků
<= jsou vstupy/výstupy z mapy.

 
#################################################
#                        #       @@  #   @@  @@<=3
#         #              #    %I  @  ###        #
#         #              #    %#  @    #    I   #
<=%%%     #              I    %#       #@  @@  <=1
#         #              I    %#       @@   I   #
#                        I    %#                #
#                 %%%       %%%#    @          <=2
#################################################                      
Cesta kudy se budou útočníci ubírat bude vždy nejkratší možná vzhledem ke zdím a věžím.
Můžete navíc implementovat více strategií procházení, kde každý útočník bude mít svoji strategii.
Například slabší marvenci se mohou snažit vyhýbat věžím, naopak odolnější zase mohou být pomalejší a vždy musí udělat alespoň X kroků rovně.

Hráč volí vstup a typy útočníků

Kde lze využít polymorfismus? (doporučené)

Parametry útočníků: znak, barva, rychlst, životy, ...
Efekty útoku věží: zranění, zpomalení, ...
Políčka mapy: volno, věž, útočník ...
Uživatelské rozhraní: konzole, ncurses, SDL, OpenGL (různé varianty), ...

-----------------

Specifikace:

Uživatel si na začátku hry zvolí jestli chce začít novou hru anebo načíst starý save. Pokud zvolí novou hru, vytvoří se
nová instance hry a na obrazovce se zobrazí mapa na kterou se vykreslí prvních několik towers v závislosti na obtížnosti.
Poté je v závislosti na nastavené obtížnosti určena hodnota peněz které může hráč poté využít pro vyslání různých
Attackers. Jakmile hráč zničí věž bude odměněn úměrným počet peněz. Když hráč zničí všechny věže.
Jakmile jsou všechny věže zničeny, hra končí. Je spočteno score, které odpovídá zbylému počtu peněz.
Hra poté nabídne zapsat se do leaderboardu nebo vrátit se do hlavního menu. V hlavním menu si
uživatel může zvolit obtížnost hry, která ovlivní počet věží a peníze, které dostane na začátku hry a za každé zničení věže.

F,I,T,S označuje věže ( F - fast, I - základní, T - high damage, S - SlowEffect )
@,%,$ jsou různé druhy útočníků (@ - Charger, % - fast attacker, $ basic attacker)

Polymorfismus bude uplatněn pro manipulaci s útočníky a věžmi.
_tower_manager se stará o vytváření věží a jejich manipulaci. Udržuje vektor s prvky typu Towers na kterých provádí
operace které se vykonají podle sbtypu věže.
_player se stará o vytváření a manipulaci s útočníky. Při pohybu volá polymorfní metodu findShortestPath(Entity* entity),
která podle typu útočníka najde specifickou cestu k cíli který daný útočník považuje za důležitou.
Více specifik je v hlavičkových souborech.